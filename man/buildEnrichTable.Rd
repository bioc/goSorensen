% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildEnrichTable.R
\name{buildEnrichTable}
\alias{buildEnrichTable}
\alias{buildEnrichTable.default}
\alias{buildEnrichTable.character}
\alias{buildEnrichTable.list}
\title{Creates a 2x2 enrichment contingency table from two gene lists, or all pairwise contingency
tables for a "list" of gene lists.}
\usage{
buildEnrichTable(x, ...)

\method{buildEnrichTable}{default}(
  x,
  y,
  listNames = c("gene.list1", "gene.list2"),
  check.table = TRUE,
  geneUniverse,
  orgPackg,
  onto,
  GOLevel,
  showEnrichedIn = TRUE,
  pAdjustMeth = "BH",
  pvalCutoff = 0.01,
  qvalCutoff = 0.05,
  parallel = FALSE,
  nOfCores = 1,
  ...
)

\method{buildEnrichTable}{character}(
  x,
  y,
  listNames = c("gene.list1", "gene.list2"),
  geneUniverse,
  orgPackg,
  onto,
  GOLevel,
  showEnrichedIn = TRUE,
  check.table = TRUE,
  pAdjustMeth = "BH",
  pvalCutoff = 0.01,
  qvalCutoff = 0.05,
  parallel = FALSE,
  nOfCores = 1,
  ...
)

\method{buildEnrichTable}{list}(
  x,
  check.table = TRUE,
  geneUniverse,
  orgPackg,
  onto,
  GOLevel,
  showEnrichedIn = TRUE,
  pAdjustMeth = "BH",
  pvalCutoff = 0.01,
  qvalCutoff = 0.05,
  parallel = FALSE,
  nOfCores = min(detectCores() - 1, length(x) - 1),
  ...
)
}
\arguments{
\item{x}{either an object of class "character" (or coerzable to "character") representing a
vector of gene identifiers (e.g., ENTREZ) or an object of class "list". In this second case, each
element of the list must be a "character" vector of gene identifiers (e.g., ENTREZ). Then, all pairwise
contingency tables between these gene lists are built.}

\item{...}{Additional parameters for internal use (not used for the moment)}

\item{y}{an object of class "character" (or coerzable to "character") representing a vector
of gene identifiers (e.g., ENTREZ).}

\item{listNames}{a character(2) with the gene lists names originating the cross-tabulated
enrichment frequencies. Only in the "character" or default interface.}

\item{check.table}{Logical The resulting table must be checked. Defaults to TRUE.}

\item{geneUniverse}{character vector containing the universe of genes from where gene lists have been extracted. This vector must be obtained from the annotation package declared in \code{orgPackg}. For more details see \href{../doc/README.html}{README File}.}

\item{orgPackg}{A string with the name of the genomic annotation package corresponding to a specific species to be analyzed, which must be previously installed and activated. For more details see \href{../doc/README.html}{README File}.}

\item{onto}{string describing the ontology. Either "BP", "MF" or "CC".}

\item{GOLevel}{An integer, the GO ontology level.}

\item{showEnrichedIn}{Boolean. If TRUE (default), the cross-table of enriched and non-enriched GO terms vs  Gene Lists names (obtained from the \code{enrichedIn} function) is automatically saved in the Global Environment.}

\item{pAdjustMeth}{string describing the adjust method, either "BH", "BY" or "Bonf", defaults to 'BH'.}

\item{pvalCutoff}{adjusted pvalue cutoff on enrichment tests to report}

\item{qvalCutoff}{qvalue cutoff on enrichment tests to report as significant.
Tests must pass i) pvalueCutoff on unadjusted pvalues, ii) pvalueCutoff on adjusted pvalues and
iii) qvalueCutoff on qvalues to be reported}

\item{parallel}{Logical. Defaults to FALSE but put it at TRUE for parallel computation.}

\item{nOfCores}{Number of cores for parallel computations. Only in "list" interface.}
}
\value{
in the "character" interface, an object of class "table".
It represents a 2x2 contingency table, the cross-tabulation of
the enriched GO terms in two gene lists: "Number of enriched GO terms in list 1
(TRUE, FALSE)" x "Number of enriched Go terms in list 2 (TRUE, FALSE)".
In the "list" interface, the result is an object of class "tableList" with all
pairwise tables.
Class "tableList" corresponds to objects representing all mutual enrichment contingency tables
generated in a pairwise fashion:
Given gene lists (i.e. "character" vectors of gene identifiers) l1, l2, ..., lk,
an object of class "tableList" is a list of lists of
contingency tables t(i,j) generated from each pair of gene lists i and j, with the
following structure:

$l2

$l2$l1$t(2,1)

$l3

$l3$l1$t(3,1), $l3$l2$t(3,2)

...

$lk

$lk$l1$t(k,1), $lk$l2$t(k,2), ..., $lk$l(k-1)t(K,k-1)
}
\description{
Creates a 2x2 enrichment contingency table from two gene lists, or all pairwise contingency
tables for a "list" of gene lists.
}
\details{
The arguments 'parallel' and 'nOfCores' are ignored in the 'default' and "character" interfaces,
but included for possible future developments; they only apply to the "list" interface.
In the "list" interface, 'parallel' defaults to FALSE but there is the possibility of some time
saving when the number of gene lists (the length of 'x' in the "list" interface) is high.
The trade off between the time spent initializing parallel computing and the possible time gain
due to parallelization must be considered in each application and computer.
}
\section{Methods (by class)}{
\itemize{
\item \code{buildEnrichTable(default)}: S3 default method

\item \code{buildEnrichTable(character)}: S3 method for class "character"

\item \code{buildEnrichTable(list)}: S3 method for class "list"

}}
\examples{
# Obtaining ENTREZ identifiers for the gene universe of humans:
library(org.Hs.eg.db)
humanEntrezIDs <- keys(org.Hs.eg.db, keytype = "ENTREZID")

# Gene lists to be explored for enrichment:
data(allOncoGeneLists)
?allOncoGeneLists

# Table of joint GO term enrichment between gene lists Vogelstein and sanger,
# for ontology MF at GO level 6.
vog.VS.sang <- buildEnrichTable(allOncoGeneLists[["Vogelstein"]],
                                allOncoGeneLists[["sanger"]],
                                geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db",
                                onto = "MF", GOLevel = 6, listNames = c("Vogelstein", "sanger"))
vog.VS.sang
# All tables of mutual enrichment:
all.tabs <- buildEnrichTable(allOncoGeneLists,
                             geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db",
                             onto = "MF", GOLevel = 6)
all.tabs$waldman
}
