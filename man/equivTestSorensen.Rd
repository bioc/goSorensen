% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/equivtestsorensen.R
\name{equivTestSorensen}
\alias{equivTestSorensen}
\alias{equivTestSorensen.table}
\alias{equivTestSorensen.matrix}
\alias{equivTestSorensen.numeric}
\alias{equivTestSorensen.character}
\alias{equivTestSorensen.list}
\title{Equivalence test based on the Sorensen-Dice dissimilarity}
\usage{
equivTestSorensen(x, ...)

\method{equivTestSorensen}{table}(
  x,
  d0 = 1/(1 + 1.25),
  conf.level = 0.95,
  boot = FALSE,
  nboot = 10000,
  check.table = TRUE,
  ...
)

\method{equivTestSorensen}{matrix}(
  x,
  d0 = 1/(1 + 1.25),
  conf.level = 0.95,
  boot = FALSE,
  nboot = 10000,
  check.table = TRUE,
  ...
)

\method{equivTestSorensen}{numeric}(
  x,
  d0 = 1/(1 + 1.25),
  conf.level = 0.95,
  boot = FALSE,
  nboot = 10000,
  check.table = TRUE,
  ...
)

\method{equivTestSorensen}{character}(
  x,
  y,
  d0 = 1/(1 + 1.25),
  conf.level = 0.95,
  boot = FALSE,
  nboot = 10000,
  listNames = c("gene.list1", "gene.list2"),
  check.table = TRUE,
  ...
)

\method{equivTestSorensen}{list}(
  x,
  d0 = 1/(1 + 1.25),
  conf.level = 0.95,
  boot = FALSE,
  nboot = 10000,
  check.table = TRUE,
  ...
)
}
\arguments{
\item{x}{either an object of class "table", "matrix", "numeric", "character" or "list".
See the details section for more information.}

\item{...}{extra parameters for function \code{buildEnrichTable}.}

\item{d0}{equivalence threshold for the Sorensen-Dice dissimilarity, d.
The null hypothesis states that d >= d0, i.e., inequivalence between the compared
gene lists and the alternative that d < d0, i.e., equivalence or dissimilarity
irrelevance (up to a level d0).}

\item{conf.level}{confidence level of the one-sided confidence interval, a value between 0 and 1.}

\item{boot}{boolean. If TRUE, the confidence interval and the test p-value are computed by means
of a bootstrap approach instead of the asymptotic normal approach. Defaults to FALSE.}

\item{nboot}{numeric, number of bootstrap replicates. Ignored if \code{boot == FALSE}. Defaults to 10000.}

\item{check.table}{Boolean. If TRUE (default), argument \code{x} is checked to adequately
represent a 2x2 contingency table. This checking is performed by means of function
\code{nice2x2Table}.}

\item{y}{an object of class "character" representing a list of gene identifiers.}

\item{listNames}{character(2), names of both gene lists to be compared (only for the character interface)}
}
\value{
For all interfaces (except for the "list" interface) the result is a list of class "equivSDhtest" which
inherits from "htest", with the following components:
\describe{
  \item{statistic}{the value of the studentized statistic (dSorensen(x) - d0) / seSorensen(x)}
  \item{p.value}{the p-value of the test}
  \item{conf.int}{the one-sided confidence interval (0, dUpp]}
  \item{estimate}{the Sorensen dissimilarity estimate, dSorensen(x)}
  \item{null.value}{the value of d0}
  \item{stderr}{the standard error of the Sorensen dissimilarity estimate, seSorensen(x),
  used as denominator in the studentized statistic}
  \item{alternative}{a character string describing the alternative hypothesis}
  \item{method}{a character string describing the test}
  \item{data.name}{a character string giving the names of the data}
  \item{enrichTab}{the 2x2 contingency table of joint enrichment whereby the test was based}
}
For the "list" interface, the result is an "equivSDhtestList", a list of objects with
all pairwise comparisons, each one being an object of "equivSDhtest" class.
}
\description{
Equivalence test based on the Sorensen-Dice dissimilarity, computed either by an asymptotic
normal or by a bootstrap approach.
}
\details{
This function computes either the normal asymptotic or the bootstrap equivalence
test based on the Sorensen-Dice dissimilarity, given a 2x2 arrangement of frequencies
(either implemented as a "table", a "matrix" or a "numeric" object):
\deqn{
 \tabular{rr}{
  n_{11} \tab n_{10} \cr
  n_{01} \tab n_{00},
 }
}{}

\tabular{rr}{
n_11 \tab n_10 \cr
n_01 \tab n_00,
}

The subindex '11' corresponds to those
GO items enriched in both lists, '01' to items enriched in the second list but not in the first one,
'10' to items enriched in the first list but not enriched in the second one and '00' corresponds
to those GO items non enriched in both gene lists, i.e., to the double negatives, a value which
is ignored in the computations, except if \code{boot == TRUE}.

In the "numeric" interface, if \code{length(x) >= 4}, the values are interpreted
as
\eqn{(n_{11}, n_{01}, n_{10}, n_{00})}{%
(n_11, n_01, n_10, n_00)}, always in this order and discarding extra values if necessary.

If \code{x} is an object of class "character", it must represent a list of gene identifiers. Then the
equivalence test is performed between lists \code{x} and \code{y}, after internally summarizing these
gene lists as a 2x2 contingency table of joint enrichment.

If \code{x} is an object of class "list", each of its elements must be a "character" vector of gene
identifiers. Then all pairwise equivalence tests are performed between these gene lists.
The test is based on the fact that the studentized statistic (^d - d) / ^se is aproximately distributed
as a standard normal. ^d stands for the sample Sorensen-Dice dissimilarity, d for its true (unknown) value
and ^se for the estimate of its standard error. This result is asymptotically correct, but the true distribution
of the studentized statistic is not exactly normal for finite samples, with a heavier left tail than expected
under the Gaussian model. The bootstrap method provides a better approximation to this distribuion.
}
\section{Methods (by class)}{
\itemize{
\item \code{table}: S3 method for class "table"

\item \code{matrix}: S3 method for class "matrix"

\item \code{numeric}: S3 method for class "numeric"

\item \code{character}: S3 method for class "character"

\item \code{list}: S3 method for class "list"
}}

\examples{
# Gene lists 'atlas' and 'sanger' in 'allOncoGeneLists' dataset. Table of joint enrichment
# of GO items in ontology BP at level 3.
tab_atlas.sanger_BP3
equivTestSorensen(tab_atlas.sanger_BP3)
# Bootstrap test:
equivTestSorensen(tab_atlas.sanger_BP3, boot = TRUE)

# Equivalence tests from scratch, directly from gene lists:
# (These examples may be considerably time consuming due to many enrichment
# tests to build the contingency tables of mutual enrichment)
# ?pbtGeneLists
# Gene universe:
# data(humanEntrezIDs)
# equivTestSorensen(pbtGeneLists[["IRITD3"]], pbtGeneLists[["IRITD5"]],
#                   geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db",
#                   onto = "CC", GOLevel = 5)
# Bootstrap instead of normal approximation test:
# equivTestSorensen(pbtGeneLists[["IRITD3"]], pbtGeneLists[["IRITD5"]],
#                   geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db",
#                   onto = "CC", GOLevel = 5,
#                   boot = TRUE)

# Essentially, the above code makes:
# IRITD3vs5.CC5 <- buildEnrichTable(pbtGeneLists[["IRITD3"]], pbtGeneLists[["IRITD5"]],
#                                   geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db",
#                                   onto = "CC", GOLevel = 5)
# IRITD3vs5.CC5
# equivTestSorensen(IRITD3vs5.CC5)
# equivTestSorensen(IRITD3vs5.CC5, boot = TRUE)
# (Note that building first the contingency table may be advantageous to save time!)

# All pairwise equivalence tests:
# equivTestSorensen(pbtGeneLists,
#                   geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db",
#                   onto = "CC", GOLevel = 5)


# Equivalence test on a contingency table represented as a numeric vector:
equivTestSorensen(c(56, 1, 30, 47))
equivTestSorensen(c(56, 1, 30, 47), boot = TRUE)
equivTestSorensen(c(56, 1, 30))
# Error: all frequencies are needed for bootstrap:
try(equivTestSorensen(c(56, 1, 30), boot = TRUE), TRUE)
}
\seealso{
\code{\link{nice2x2Table}} for checking and reformatting data,
\code{\link{dSorensen}} for computing the Sorensen-Dice dissimilarity,
\code{\link{seSorensen}} for computing the standard error of the dissimilarity,
\code{\link{duppSorensen}} for the upper limit of a one-sided confidence interval
of the dissimilarity.
\code{\link{getTable}}, \code{\link{getPvalue}}, \code{\link{getUpper}},
\code{\link{getSE}} for accessing specific fields in the result of these testing functions.
\code{\link{update}} for updating the result of these testing functions with alternative
equivalence limits or confidence levels.
}
