% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/equivtestsorensen.R
\name{equivTestSorensen}
\alias{equivTestSorensen}
\alias{equivTestSorensen.table}
\alias{equivTestSorensen.matrix}
\alias{equivTestSorensen.numeric}
\alias{equivTestSorensen.character}
\alias{equivTestSorensen.list}
\title{Asymptotic equivalence test for the Sorensen-Dice dissimilarity}
\usage{
equivTestSorensen(x, ...)

\method{equivTestSorensen}{table}(
  x,
  n,
  d0 = 1/(1 + 1.25),
  conf.level = 0.95,
  check.table = TRUE
)

\method{equivTestSorensen}{matrix}(
  x,
  n,
  d0 = 1/(1 + 1.25),
  conf.level = 0.95,
  check.table = TRUE
)

\method{equivTestSorensen}{numeric}(
  x,
  n,
  d0 = 1/(1 + 1.25),
  conf.level = 0.95,
  check.table = TRUE
)

\method{equivTestSorensen}{character}(
  x,
  y,
  d0 = 1/(1 + 1.25),
  conf.level = 0.95,
  listNames = c("gene.list1", "gene.list2"),
  ...
)

\method{equivTestSorensen}{list}(x, d0 = 1/(1 + 1.25), conf.level = 0.95, ...)
}
\arguments{
\item{x}{either an object of class "table", "matrix", "numeric", "character" or "list".
See the details section for more information.}

\item{...}{extra parameters for function \code{crossTabGOIDs4GeneLists} in package \code{equivStandardTest}.}

\item{n}{tumeric. It is ignored except in the "table", "matrix" or "numeric" interfaces when argument \code{x}
represents relative frequencies, see the details section for more information.}

\item{d0}{equivalence threshold for the population Sorensen-Dice dissimilarity, d. The null hypothesis
states that d >= d0, and the alternative that d < d0.}

\item{conf.level}{confidence level of the one-sided confidence interval, a value between 0 and 1.}

\item{check.table}{Boolean. If TRUE (default), argument \code{x} is checked to adequately
represent a 2x2 contingency table. This checking is performed by means of function
\code{nice2x2Table}.}

\item{y}{an object of class "character" representing a list of gene identifiers.}
}
\value{
For all interfaces (except for the "list" interface) the result is a list of class "equivSDhtest" descending
from "htest", with the following components:
\describe{
  \item{statistic}{the value of the studentized statistic (dSorensen(x) - d0) / seSorensen(x)}
  \item{p.value}{the p-value of the test}
  \item{conf.int}{the one-sided confidence interval (0, dUpp]}
  \item{estimate}{the Sorensen dissimilarity estimate, dSorensen(x)}
  \item{null.value}{the value of d0}
  \item{stderr}{the standard error of the Sorensen dissimilarity estimate, seSorensen(x),
  used as denominator in the studentized statistic}
  \item{alternative}{a character string describing the alternative hypothesis}
  \item{method}{a character string describing the test}
  \item{data.name}{a character string giving the names of the data}
  \item{enrichTab}{the 2x2 contingency table of joint enrichment whereby the test was based}
}
For the "list" interface, the result is an "equivSDhtestList", a list of objects with
all pairwise comparisons, each one being an object of "equivSDhtest" class.
}
\description{
Asymptotic equivalence test for the Sorensen-Dice dissimilarity
}
\details{
This function computes the asymptotic equivalence test based on the Sorensen-Dice dissimilarity,
given a 2x2 arrangement of frequencies (either implemented as a "table", a "matrix"
or a "numeric" object):
\deqn{
 \tabular{rr}{
  n_{00} \tab n_{01} \cr
  n_{10} \tab n_{11},
 }
}{}

\tabular{rr}{
n_00 \tab n_01 \cr
n_10 \tab n_11,
}

The subindex '00' corresponds to those GO items non enriched in both gene lists, '10' corresponds to those
enriched in the first list but not in the second, '01' to items non enriched in the first list
but enriched in the second and '11' to those GO items enriched in both lists.
These values must be provided in this order. In the "numeric" interface,
if \code{length(x) == 3} the values are interpreted as
\eqn{(n_{10}, n_{01}, n_{11})}{%
(n_10, n_01, n_11)} and otherwise as
\eqn{(n_{00}, n_{10}, n_{01}, n_{11})}{%
(n_00, n_10, n_01, n_11)}, discarding extra values if necessary.
The result is correct, regardless the frequencies being absolute or relative but, in this second case, the value of
argument \code{n} must be provided and must correspond to the total number of enriched GO items, i.e., to the sum
of absolute frequencies
\eqn{n_{10} + n_{01} + n_{11}}{%
n_10 + n_01 + n_11.}

If \code{x} is an object of class "character", it must represent a list of gene identifiers. Then the
equivalence test is performed between lists \code{x} and \code{y}, after internally summarizing these
gene lists as a 2x2 contingency table of joint enrichment.

If \code{x} is an object of class "list", each of its elements must be a "character" vector of gene
identifiers. Then all pairwise equivalence tests are performed between these gene lists.
The test is based on the fact that the studentized statistic (d - d0) / se is asymptotically distributed
as a standard normal.
}
\section{Methods (by class)}{
\itemize{
\item \code{table}: S3 method for class "table"

\item \code{matrix}: S3 method for class "matrix"

\item \code{numeric}: S3 method for class "numeric"

\item \code{character}: S3 method for class "character"

\item \code{list}: S3 method for class "list"
}}

\examples{
# Gene lists 'atlas' and 'sanger' in 'allOncoGeneLists' dataset. Table of joint enrichment
# of GO items in ontology BP at level 3.
tab_atlas.sanger_BP3
equivTestSorensen(tab_atlas.sanger_BP3)

library(equivStandardTest)
data(humanEntrezIDs)

# Building enrichment contingency tables from scratch, using package "equivStandardTest"
# Gene universe:
data(humanEntrezIDs)
# Gene lists to be explored for enrichment:
pbtGeneLists
IRITD3VS5.MF4 <- crossTabGOIDs4GeneLists(pbtGeneLists[["IRITD3"]], pbtGeneLists[["IRITD5"]],
                                         geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db",
                                         onto = "MF", GOLevel = 4)
IRITD3VS5.MF4
equivTestSorensen(IRITD3VS5.MF4)
# Perform these computations in a single step:
equivTestSorensen(pbtGeneLists[["IRITD3"]], pbtGeneLists[["IRITD5"]],
                  geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db",
                  onto = "MF", GOLevel = 4)
# All pairwise equivalence tests:
equivTestSorensen(pbtGeneLists,
                  geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db",
                  onto = "MF", GOLevel = 4)


}
\seealso{
\code{\link{nice2x2Table}} for checking and reformatting data,
\code{\link{dSorensen}} for computing the Sorensen-Dice dissimilarity,
\code{\link{seSorensen}} for computing the standard error of the dissimilarity,
\code{\link{duppSorensen}} for the upper limit of a one-sided confidence interval
of the dissimilarity.
\code{\link{getTable}}, \code{\link{getPvalue}}, \code{\link{getUpper}},
\code{\link{getSE}} for accessing specific fields in the result of these testing functions.
\code{\link{update}} for updating the result of these testing functions with alternative
equivalence limits or confidence levels.
}
