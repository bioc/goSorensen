% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sesorensen.R
\name{seSorensen}
\alias{seSorensen}
\alias{seSorensen.table}
\alias{seSorensen.matrix}
\alias{seSorensen.numeric}
\alias{seSorensen.character}
\alias{seSorensen.list}
\title{Standard error of the sample Sorensen-Dice dissimilarity, asymptotic approach}
\usage{
seSorensen(x, ...)

\method{seSorensen}{table}(x, n, check.table = TRUE)

\method{seSorensen}{matrix}(x, n, check.table = TRUE)

\method{seSorensen}{numeric}(x, n, check.table = TRUE)

\method{seSorensen}{character}(x, y, listNames = c("gene.list1", "gene.list2"), ...)

\method{seSorensen}{list}(x, ...)
}
\arguments{
\item{x}{either an object of class "table", "matrix" or "numeric" representing a 2x2 contingency table,
or a "character" (a set of gene identifiers) or "list" object. See the details section for more information.}

\item{...}{extra parameters for function \code{crossTabGOIDs4GeneLists} in package \code{equivStandardTest}.}

\item{n}{numeric. It is ignored except in the "table", "matrix" or "numeric" interfaces when argument \code{x}
represents relative frequencies, see the details section for more information.}

\item{check.table}{Boolean. If TRUE (default), argument \code{x} is checked to adequately
represent a 2x2 contingency table. This checking is performed by means of function
\code{nice2x2Table}  (only in the "table", "matrix" or "numeric" interfaces).}

\item{y}{an object of class "character" representing a vector of gene identifiers.}
}
\value{
In the "table", "matrix", "numeric" and "character" interfaces, the value of the standard error of the
Sorensen-Dice dissimilarity estimate. In the "list" interface, the symmetric matrix of all pairwise standard error
dissimilarity estimates.
}
\description{
Standard error of the sample Sorensen-Dice dissimilarity, asymptotic approach
}
\details{
This function computes the standard error estimate of the sample Sorensen-Dice dissimilarity,
given a 2x2 arrangement of frequencies (either implemented as a "table", a "matrix"
or a "numeric" object):
\deqn{
 \tabular{rr}{
  n_{00} \tab n_{01} \cr
  n_{10} \tab n_{11},
 }
}{}

\tabular{rr}{
n_00 \tab n_01 \cr
n_10 \tab n_11,
}

The subindex '00' corresponds to those GO items non enriched in both gene lists, '10' corresponds to those
enriched in the first list but not in the second, '01' to items non enriched in the first list
but enriched in the second and '11' to those GO items enriched in both lists.
These values must be provided in this order. In the "numeric" interface,
if \code{length(x) == 3} the values are interpreted as
\eqn{(n_{10}, n_{01}, n_{11})}{%
(n_10, n_01, n_11)} and otherwise as
\eqn{(n_{00}, n_{10}, n_{01}, n_{11})}{%
(n_00, n_10, n_01, n_11)}, discarding extra values if necessary.

The result is correct, regardless the frequencies being absolute or relative but, in this second case, the value of
argument \code{n} must be provided and must correspond to the total number of enriched GO items, i.e., to the sum
of absolute frequencies
\eqn{n_{10} + n_{01} + n_{11}}{%
n_10 + n_01 + n_11.}
}
\section{Methods (by class)}{
\itemize{
\item \code{table}: S3 method for class "table"

\item \code{matrix}: S3 method for class "matrix"

\item \code{numeric}: S3 method for class "numeric"

\item \code{character}: S3 method for class "character"

\item \code{list}: S3 method for class "list"
}}

\examples{
# Gene lists 'atlas' and 'sanger' in 'Cangenes' dataset. Table of joint enrichment
# of GO items in ontology BP at level 3.
# load(file = "atlas.sanger_BP3.Rda")
atlas.sanger_BP3
dSorensen(atlas.sanger_BP3)
seSorensen(atlas.sanger_BP3)
# To compute se for a proportions table:
relAtlas.sanger_BP3 <- atlas.sanger_BP3/sum(atlas.sanger_BP3)
seSorensen(relAtlas.sanger_BP3, n = sum(atlas.sanger_BP3[2:4]))

library(equivStandardTest)
data(humanEntrezIDs)

?pbtGeneLists
# (Time consuming:)
seSorensen(pbtGeneLists[[2]], pbtGeneLists[[4]],
           listNames = names(pbtGeneLists)[c(2,4)],
           onto = "BP", GOLevel = 5,
           geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db")
# Essentially, the above code makes the same as:
pbtBP5.IRITD3vsKT1 <- nice2x2Table(
  crossTabGOIDs4GeneLists(pbtGeneLists[[2]], pbtGeneLists[[4]],
                          onto = "BP", GOLevel = 5,
                          geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db"),
                          listNames = names(pbtGeneLists)[c(2,4)])
seSorensen(pbtBP5.IRITD3vsKT1)

# (Quite time consuming:)
seSorensen(pbtGeneLists,
           onto = "BP", GOLevel = 5,
           geneUniverse = humanEntrezIDs, orgPackg = "org.Hs.eg.db")

}
\seealso{
\code{\link{nice2x2Table}} for checking and reformatting data,
\code{\link{dSorensen}} for computing the Sorensen-Dice dissimilarity,
\code{\link{duppSorensen}} for the upper limit of a one-sided confidence interval
of the dissimilarity, \code{\link{equivTestSorensen}} for an equivalence test.
}
